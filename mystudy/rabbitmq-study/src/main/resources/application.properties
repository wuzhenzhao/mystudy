server.port=8082
spring.application.name=spirng-boot-rabbitmq-consumer
spring.rabbitmq.host=192.168.1.101
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
#direct手动应答
spring.rabbitmq.listener.direct.acknowledge-mode=manual
#NONE值是禁用发布确认模式，是默认值
#CORRELATED值是发布消息成功到交换器后会触发回调方法
#SIMPLE值经测试有两种效果，其一效果和CORRELATED值一样会触发回调方法，
# 其二在发布消息成功后使用rabbitTemplate调用waitForConfirms或waitForConfirmsOrDie方法等待broker节点返回发送结果，
# 根据返回结果来判定下一步的逻辑，要注意的点是waitForConfirmsOrDie方法如果返回false则会关闭channel，
# 则接下来无法发送消息到broker;


#发布者确认
spring.rabbitmq.publisher-confirm-type=correlated
#发布者到达确认
spring.rabbitmq.publisher-returns=true

spring.rabbitmq.listener.type=direct

#simple关闭自动ack,手动ack
#spring.rabbitmq.listener.simple.acknowledge-mode=manual
### 开启消费者(程序出现异常的情况下会进行重试，捕获异常重试将不生效)
spring.rabbitmq.listener.direct.retry.enabled=true
#最大重试传递次数
spring.rabbitmq.listener.direct.retry.max-attempts=3
#第一次和第二次尝试传递消息的间隔时间 单位毫秒
spring.rabbitmq.listener.direct.retry.initial-interval=5000ms
#最大重试时间间隔，单位毫秒
spring.rabbitmq.listener.direct.retry.max-interval=300000ms
#应用前一次重试间隔的乘法器，multiplier默认为1
spring.rabbitmq.listener.direct.retry.multiplier=3
#以上配置的间隔0s  5s  15s  45s


#重试次数超过上面的设置之后是否丢弃(消费者listener抛出异常，是否重回队列，默认true：重回队列， false为不重回队列(结合死信交换机))
spring.rabbitmq.listener.direct.default-requeue-rejected=true

### 模板配置
##设置为 true 后 消费者在消息没有被路由到合适队列情况下会被return监听，而不会自动删除
spring.rabbitmq.template.mandatory=true
